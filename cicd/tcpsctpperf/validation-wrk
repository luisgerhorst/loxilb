#!/bin/bash
set -eo pipefail
set -x

. "$(dirname $0)/../common.sh"

set -u

threads=$1
time=$2
dst="$3"
burst_len="$4"

cleanup() {
    set +e

    sudo pkill -SIGTERM nginx
}

trap cleanup EXIT

OSE_NGINX_PAYLOAD=${OSE_NGINX_PAYLOAD:-1024}
OSE_WRK_CONNECTIONS=${OSE_WRK_CONNECTIONS:-256}
# 12500 is 80% of max. on a Intel(R) Core(TM) i5-8400 CPU @ 2.80GHz with Linux v6.5
OSE_WRK_RATE=${OSE_WRK_RATE:-12500}
OSE_WRK_EXTRA_FLAGS="${OSE_WRK_EXTRA_FLAGS:-}"
export OSE_PERF_STAT="${OSE_PERF_STAT:-}"

# https://github.com/loxilb-io/loxilb/issues/449
for i in $(seq 1 $OSE_LOXILB_SERVERS)
do
    tmpd=$(mktemp --directory --suffix=-$(basename $0)-$i)
    mkdir -p $tmpd/www
    echo "Hello World from $i" > $tmpd/www/hello-world.txt
    head --bytes=${OSE_LATENCY_PAYLOAD_SIZE} /dev/urandom > $tmpd/www/head-urandom

    echo "
worker_processes 1;
daemon off;  # run in foreground
events {}
pid nginx.pid;
error_log /dev/stderr;
http {
    access_log off;
    client_body_temp_path .;
    proxy_temp_path .;
    fastcgi_temp_path .;
    uwsgi_temp_path .;
    scgi_temp_path .;
    server {
        server_name localhost;
        listen 14000;
        location / {
            root www;
        }
    }
}
" > $tmpd/nginx.conf

    $hexec l3ep$i \
        taskset --cpu-list $(expr $i '-' 1) \
        nginx -p $tmpd -c nginx.conf \
        > ${dst}nginx.log \
        &
done

sleep $OSE_LOXILB_SERVERS

set +e
url=http://20.20.20.1:14000/hello-world.txt
$hexec l3h1 \
    curl $url

url=http://20.20.20.1:14000/head-urandom
$hexec l3h1 \
    curl $url | wc --bytes

sync
echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
sleep 1
for burst_pos in $(seq 0 $((burst_len - 1)))
do
    echo -n "$OSE_WRK_RATE" > ${dst}${burst_pos}.OSE_WRK_RATE

    set +e
    $hexec l3h1 \
        $OSE_PERF_STAT --output ${dst}${burst_pos}.perf \
        taskset --cpu-list $OSE_LOXILB_SERVERS-$(expr $OSE_LOXILB_SERVERS '-' 1 '+' $threads) \
        wrk $OSE_WRK_EXTRA_FLAGS \
        --threads $threads --duration ${time}s \
        --connections $OSE_WRK_CONNECTIONS --rate $OSE_WRK_RATE --latency $url \
        > ${dst}${burst_pos}.latency.log
    ec=$?
    set -e

    if [ $ec != 0 ]
    then
        break
    fi
done

sudo pkill -SIGTERM nginx
wait

exit $ec
